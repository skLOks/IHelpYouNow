import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from aiogram.enums import ParseMode
import requests
import json


async def gpt_mess(text):
    prompt = {
                "modelUri": "gpt://b1g6ciet5rgs1gajvnjc/yandexgpt-lite",
                "completionOptions": {
                    "stream": False,
                    "temperature": 0.6,
                    "maxTokens": "2000"
                },
                "messages": [
                    {
                        "role": "system",
                        "text": text
                    },
                ]
            }


    url = "https://llm.api.cloud.yandex.net/foundationModels/v1/completion"
    headers = {
        "Content-Type": "application/json",
        "Authorization": "Api-Key AQVNw2SfjLFhTX0EzKsTHaBQSLPmtobmlha8814s"
    }

    response = requests.post(url, headers=headers, json=prompt)
    result = response.text
    y = json.loads(result)

    retText = y['result']['alternatives'][0]['message']['text']
    
    return retText



#–í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)

#–û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token="6841478496:AAF6TfBkYysVzfe0DRgqVzQ6kffUfpq6nIM")

#–î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()


#/////////////////////////////////////////////////////////////////////////

@dp.message(Command('start'))
async def start(message: Message):
    await message.answer('''–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫,üëã 
–∑–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –ë–ï–°–ü–õ–ê–¢–ù–£–Æ –º–æ—Ä–∞–ª—å–Ω—É—é –ø–æ–º–æ—â—å!üòÅ –Ø –±–æ—Ç, ü§ñ –º–µ–Ω—è –∑–æ–≤—É—Ç  IHelpYouNow –∏ —Å–µ–π—á–∞—Å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏—ë–º. –Ø —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–º–æ–≥—É –≤–∞–º!üòÑ –í—Å—ë –∞–±—Å–æ–ª—é—Ç–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ, –Ω–æ —Å—Ç–æ–∏—Ç —á—É—á—É—Ç—å –ø–æ–¥–æ–∂–¥–∞—Ç—å, –Ω–∞–¥–µ—é—Å—å –≤–∞—Å —ç—Ç–æ –Ω–µ–∑–∞—Ç—Ä—É–¥–Ω–∏—Ç!üòâ
‚úç–ß—Ç–æ –±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏—ë–º, –Ω–∞–ø–∏—à–∏—Ç–µ: /rec
üí¨–ß—Ç–æ –±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –Ω–∞–ø–∏—à–∏—Ç–µ: /help''')

@dp.message(F.text)
async def pr(message: Message):
    a = await gpt_mess(message.text)
    await message.answer(a)


#\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    await dp.start_polling(bot)
    
if __name__ == "__main__":
    asyncio.run(main())